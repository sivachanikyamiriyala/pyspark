hive (kalyan)> desc student_partition ;
OK
name                	string              	                    
id                  	int                 	                    
course              	string              	                    
year                	int                 	                    
	 	 
# Partition Information	 	 
# col_name            	data_type           	comment             
	 	 
course              	string              	                    
year                	int                 	                    
Time taken: 0.416 seconds, Fetched: 10 row(s)
hive (kalyan)> select * from student_partition ;
OK
Time taken: 0.869 seconds
hive (kalyan)> show partitions student_partition;
OK
Time taken: 0.586 seconds
hive (kalyan)> set hive.exec.dynamic.partition.mode=nonstrict ;
hive (kalyan)> load data local inpath '/home/orienit/hive_inputs/student_cse_1.txt' overwrite into table student_partition partition(course='cse',year=1) ;
Loading data to table kalyan.student_partition partition (course=cse, year=1)
Partition kalyan.student_partition{course=cse, year=1} stats: [numFiles=1, numRows=0, totalSize=54, rawDataSize=0]
OK
Time taken: 2.245 seconds
hive (kalyan)> load data local inpath '/home/orienit/hive_inputs/student_cse_2.txt' overwrite into table student_partition partition(course='cse',year=2) ;
Loading data to table kalyan.student_partition partition (course=cse, year=2)
Partition kalyan.student_partition{course=cse, year=2} stats: [numFiles=1, numRows=0, totalSize=43, rawDataSize=0]
OK
Time taken: 1.398 seconds
hive (kalyan)> select * from student_partition ;
OK
arun	1	cse	1
sunil	2	cse	1
raj	3	cse	1
naveen	4	cse	1
venki	5	cse	2
prasad	6	cse	2
sudha	7	cse	2
Time taken: 0.578 seconds, Fetched: 7 row(s)
hive (kalyan)> show partitions student_partition;
OK
course=cse/year=1
course=cse/year=2
Time taken: 0.392 seconds, Fetched: 2 row(s)
hive (kalyan)> select * from student_partition where year=2;
OK
venki	5	cse	2
prasad	6	cse	2
sudha	7	cse	2
Time taken: 0.848 seconds, Fetched: 3 row(s)
hive (kalyan)> show tables ;
OK
siva
student2
student3
student4
student5
student_partition
studentdata
users
users1
users2
Time taken: 0.348 seconds, Fetched: 10 row(s)
hive (kalyan)> select * from student3 ;
OK
arun	1	cse	1
sunil	2	cse	1
raj	3	cse	1
naveen	4	cse	1
rani	5	mech	2
anvith	6	mech	2
madhu	7	mech	2
Time taken: 0.42 seconds, Fetched: 7 row(s)
hive (kalyan)> insert into table student_partition partition(course,year) select * from student3 ;
Query ID = orienit_20200318111148_88e9dccd-e41d-463a-b671-f6ca6bbb6d46
Total jobs = 3
Launching Job 1 out of 3
Number of reduce tasks is set to 0 since there's no reduce operator
Starting Job = job_1584509035616_0001, Tracking URL = http://localhost:8088/proxy/application_1584509035616_0001/
Kill Command = /home/orienit/work/hadoop-2.6.0/bin/hadoop job  -kill job_1584509035616_0001
Hadoop job information for Stage-1: number of mappers: 1; number of reducers: 0
2020-03-18 11:11:59,654 Stage-1 map = 0%,  reduce = 0%
2020-03-18 11:12:06,208 Stage-1 map = 100%,  reduce = 0%, Cumulative CPU 1.93 sec
MapReduce Total cumulative CPU time: 1 seconds 930 msec
Ended Job = job_1584509035616_0001
Stage-4 is selected by condition resolver.
Stage-3 is filtered out by condition resolver.
Stage-5 is filtered out by condition resolver.
Moving data to: hdfs://localhost:8020/hive/kalyan/student_partition/.hive-staging_hive_2020-03-18_11-11-48_279_1909938673958687804-1/-ext-10000
Loading data to table kalyan.student_partition partition (course=null, year=null)
	 Time taken for load dynamic partitions : 985
	Loading partition {course=mech, year=2}
	Loading partition {course=cse, year=1}
	 Time taken for adding to write entity : 2
Partition kalyan.student_partition{course=cse, year=1} stats: [numFiles=2, numRows=4, totalSize=84, rawDataSize=26]
Partition kalyan.student_partition{course=mech, year=2} stats: [numFiles=1, numRows=3, totalSize=24, rawDataSize=21]
MapReduce Jobs Launched: 
Stage-Stage-1: Map: 1   Cumulative CPU: 1.93 sec   HDFS Read: 4007 HDFS Write: 214 SUCCESS
Total MapReduce CPU Time Spent: 1 seconds 930 msec
OK
Time taken: 22.057 seconds
hive (kalyan)> select * from student_partition ;
OK
arun	1	cse	1
sunil	2	cse	1
raj	3	cse	1
naveen	4	cse	1
arun	1	cse	1
sunil	2	cse	1
raj	3	cse	1
naveen	4	cse	1
venki	5	cse	2
prasad	6	cse	2
sudha	7	cse	2
rani	5	mech	2
anvith	6	mech	2
madhu	7	mech	2
Time taken: 0.852 seconds, Fetched: 14 row(s)
hive (kalyan)> insert into table student_partition partition(course='mtech',year) select name,id,year from student3 where course='cse' ;
Query ID = orienit_20200318111324_7ee66747-c352-4a81-b49d-1f62ac61f9b0
Total jobs = 3
Launching Job 1 out of 3
Number of reduce tasks is set to 0 since there's no reduce operator
Starting Job = job_1584509035616_0002, Tracking URL = http://localhost:8088/proxy/application_1584509035616_0002/
Kill Command = /home/orienit/work/hadoop-2.6.0/bin/hadoop job  -kill job_1584509035616_0002
Hadoop job information for Stage-1: number of mappers: 1; number of reducers: 0
2020-03-18 11:13:31,591 Stage-1 map = 0%,  reduce = 0%
2020-03-18 11:13:37,839 Stage-1 map = 100%,  reduce = 0%, Cumulative CPU 2.39 sec
MapReduce Total cumulative CPU time: 2 seconds 390 msec
Ended Job = job_1584509035616_0002
Stage-4 is selected by condition resolver.
Stage-3 is filtered out by condition resolver.
Stage-5 is filtered out by condition resolver.
Moving data to: hdfs://localhost:8020/hive/kalyan/student_partition/course=mtech/.hive-staging_hive_2020-03-18_11-13-24_344_8960056934073887675-1/-ext-10000
Loading data to table kalyan.student_partition partition (course=mtech, year=null)
	 Time taken for load dynamic partitions : 547
	Loading partition {course=mtech, year=1}
	 Time taken for adding to write entity : 0
Partition kalyan.student_partition{course=mtech, year=1} stats: [numFiles=1, numRows=4, totalSize=30, rawDataSize=26]
MapReduce Jobs Launched: 
Stage-Stage-1: Map: 1   Cumulative CPU: 2.39 sec   HDFS Read: 4481 HDFS Write: 130 SUCCESS
Total MapReduce CPU Time Spent: 2 seconds 390 msec
OK
Time taken: 17.012 seconds
hive (kalyan)> select * from student_partition ;
OK
arun	1	cse	1
sunil	2	cse	1
raj	3	cse	1
naveen	4	cse	1
arun	1	cse	1
sunil	2	cse	1
raj	3	cse	1
naveen	4	cse	1
venki	5	cse	2
prasad	6	cse	2
sudha	7	cse	2
rani	5	mech	2
anvith	6	mech	2
madhu	7	mech	2
arun	1	mtech	1
sunil	2	mtech	1
raj	3	mtech	1
naveen	4	mtech	1
Time taken: 0.609 seconds, Fetched: 18 row(s)
hive (kalyan)> 
hive (kalyan)> ;
hive (kalyan)> ;
hive (kalyan)> 


























hive (kalyan)> ;
hive (kalyan)> 
             > ;
hive (kalyan)> 

























hive (kalyan)> ;
hive (kalyan)> 



























hive (kalyan)> show tables ;
OK
siva
student2
student3
student4
student5
student_partition
studentdata
users
users1
users2
Time taken: 0.398 seconds, Fetched: 10 row(s)
hive (kalyan)> show databases ;
OK
default
kalyan
Time taken: 0.019 seconds, Fetched: 2 row(s)
hive (kalyan)> show tables ;
OK
siva
student2
student3
student4
student5
student_partition
studentdata
users
users1
users2
Time taken: 0.335 seconds, Fetched: 10 row(s)
hive (kalyan)> 
hive (kalyan)> show tables ;
OK
siva
student2
student3
student4
student5
student_partition
studentdata
users
users1
users2
Time taken: 0.283 seconds, Fetched: 10 row(s)
hive (kalyan)> 















hive (kalyan)> 




























hive (kalyan)> 




























hive (kalyan)> ;
hive (kalyan)> ;
hive (kalyan)> 


























hive (kalyan)> create table if not exists users3(name string,id int)
             > clustered by (id) into 2 buckets 
             > row format delimited 
             > fields terminated by '\t' 
             > lines terminated by '\n'
             > stored as textfile 
             > ;
OK
Time taken: 1.035 seconds
hive (kalyan)> insert into table users3 select * from users ;
Query ID = orienit_20200318112958_652b99fd-5af4-4678-9519-f97959dea530
Total jobs = 1
Launching Job 1 out of 1
Number of reduce tasks determined at compile time: 2
In order to change the average load for a reducer (in bytes):
  set hive.exec.reducers.bytes.per.reducer=<number>
In order to limit the maximum number of reducers:
  set hive.exec.reducers.max=<number>
In order to set a constant number of reducers:
  set mapreduce.job.reduces=<number>
Starting Job = job_1584509035616_0003, Tracking URL = http://localhost:8088/proxy/application_1584509035616_0003/
Kill Command = /home/orienit/work/hadoop-2.6.0/bin/hadoop job  -kill job_1584509035616_0003
Hadoop job information for Stage-1: number of mappers: 1; number of reducers: 2
2020-03-18 11:30:04,587 Stage-1 map = 0%,  reduce = 0%
2020-03-18 11:30:10,835 Stage-1 map = 100%,  reduce = 0%, Cumulative CPU 1.3 sec
2020-03-18 11:30:21,357 Stage-1 map = 100%,  reduce = 100%, Cumulative CPU 6.12 sec
MapReduce Total cumulative CPU time: 6 seconds 120 msec
Ended Job = job_1584509035616_0003
Loading data to table kalyan.users3
Table kalyan.users3 stats: [numFiles=2, numRows=10, totalSize=74, rawDataSize=64]
MapReduce Jobs Launched: 
Stage-Stage-1: Map: 1  Reduce: 2   Cumulative CPU: 6.12 sec   HDFS Read: 9016 HDFS Write: 212 SUCCESS
Total MapReduce CPU Time Spent: 6 seconds 120 msec
OK
Time taken: 26.719 seconds
hive (kalyan)> show tables ;
OK
siva
student2
student3
student4
student5
student_partition
studentdata
users
users1
users2
users3
Time taken: 0.356 seconds, Fetched: 11 row(s)
hive (kalyan)> select *
hive (kalyan)> select * from users3 ;
OK
rajesh	10
nani	6
anil	8
appu	4
raj	2
lg	5
rani	7
sony	1
anvith	9
venkat	3
Time taken: 0.5 seconds, Fetched: 10 row(s)
hive (kalyan)> select * from users3 tablesample(bucket 1 out of 2 on id) 
             > ;
OK
rajesh	10
nani	6
anil	8
appu	4
raj	2
Time taken: 0.405 seconds, Fetched: 5 row(s)
hive (kalyan)> select * from users3 tablesample(bucket 2 out of 2 on id) ;
OK
lg	5
rani	7
sony	1
anvith	9
venkat	3
Time taken: 0.509 seconds, Fetched: 5 row(s)
hive (kalyan)> 
             > 
